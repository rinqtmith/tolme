{"version":3,"sources":["serviceWorker.js","utils/standards.js","components/Select/select.component.jsx","components/Result/result.component.jsx","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","tolStandard","key","text","value","tolType","tolClass","tolValues","linear","valueList","f","m","c","v","radius","angular","SelectMe","name","label","standard","handleChanges","show","Dropdown","fluid","search","selection","clearable","selectOnBlur","placeholder","style","marginBottom","options","onChange","event","data","disabled","ResultComponent","result","checkValue","Fragment","Message","App","useState","tolStandardState","setTolStandardState","tolTypeState","setTolTypeState","tolClassState","setTolClassState","setCheckValue","setResult","useEffect","Container","Segment","raised","padded","textAlign","margin","Header","as","icon","Icon","Subheader","Input","type","target","Button","onClick","s","t","findIndex","el","calcTol","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ServiceWorker"],"mappings":"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","file":"static/js/main.726bd58a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Tolerance Standards\nexport const tolStandard = [\n  {\n    key: 1,\n    text: 'DIN ISO 2768-1',\n    value: '2768-1',\n  },\n];\n\n// Tolerance Types (may need to change depending on standard)\nexport const tolType = [\n  {\n    key: 1,\n    text: 'Limits for linear measures',\n    value: 'linear',\n  },\n  {\n    key: 2,\n    text: 'Limit measures for radius of curvature and chamfer height',\n    value: 'radius',\n  },\n  {\n    key: 3,\n    text: 'Limit dimensions for angular dimensions (short edge)',\n    value: 'angular',\n  },\n];\n\n// Tolerance Classes\nexport const tolClass = [\n  { key: 1, text: 'Fine (f)', value: 'f' },\n  { key: 2, text: 'Medium (m)', value: 'm' },\n  { key: 3, text: 'Coarse (c)', value: 'c' },\n  { key: 4, text: 'Very Coarse (v)', value: 'v' },\n];\n\n// Tolerance Values\nconst tolValues = {\n  '2768-1': {\n    linear: {\n      valueList: [\n        [0.5, 3],\n        [3, 6],\n        [6, 30],\n        [30, 120],\n        [120, 400],\n        [400, 1000],\n        [1000, 2000],\n        [2000, 4000],\n      ],\n      f: ['0,05', '0,05', '0,1', '0,15', '0,2', '0,3', '0,5', '-'],\n      m: ['0,1', '0,1', '0,2', '0,3', '0,5', '0,8', '1,2', '2'],\n      c: ['0,15', '0,2', '0,5', '0,8', '1,2', '2', '3', '4'],\n      v: ['-', '0,5', '1', '1,5', '2,5', '4', '6', '8'],\n    },\n    radius: {\n      valueList: [\n        [0.5, 3],\n        [3, 6],\n        [6, 4000],\n      ],\n      f: ['0,2', '0,5', '1'],\n      m: ['0,2', '0,5', '1'],\n      c: ['0,4', '1', '2'],\n      v: ['0,4', '1', '2'],\n    },\n    angular: {\n      valueList: [\n        [0, 10],\n        [10, 50],\n        [50, 120],\n        [120, 400],\n        [400, 4000],\n      ],\n      f: ['1°', \"30'\", \"20'\", \"10'\", \"5'\"],\n      m: ['1°', \"30'\", \"20'\", \"10'\", \"5'\"],\n      c: [\"1° 30'\", '1°', \"30'\", \"15'\", \"10'\"],\n      v: ['3°', '2°', '1°', \"30'\", \"20'\"],\n    },\n  },\n};\n\n// Calculates the tolerance of given value\nexport const calcTol = (value, s, t, c) => {\n  const result = tolValues[s][t].valueList.findIndex(\n    (el) => value > el[0] && value <= el[1],\n  );\n  if (result === -1) {\n    return 'Value must be between 0,5 and 4000';\n  } else {\n    return tolValues[s][t][c][result];\n  }\n};\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\n// Simple dropdown component, props: name for name, label for placeholder,\n// standard for options, handleChanges for onChange, show for disable,\n// value for value.\nconst SelectMe = ({ name, label, standard, handleChanges, show, value }) => (\n  <Dropdown\n    fluid\n    search\n    selection\n    clearable\n    selectOnBlur={false}\n    name={name}\n    placeholder={`Select a ${label}... `}\n    style={{ marginBottom: '1em' }}\n    options={standard}\n    onChange={(event, data) => handleChanges(event, data)}\n    disabled={!show}\n    value={value}\n  />\n);\n\nexport default SelectMe;\n","import React from 'react';\n\nimport { Message } from 'semantic-ui-react';\n\nconst ResultComponent = ({ result, checkValue, value }) => (\n  <React.Fragment>\n    {result !== 'Value must be between 0,5 and 4000' ? (\n      value !== 'angular' ? (\n        <Message>{`${checkValue}±${result}`}</Message>\n      ) : (\n        <Message>{`±${result}`}</Message>\n      )\n    ) : (\n      <Message>{result}</Message>\n    )}\n  </React.Fragment>\n);\n\nexport default ResultComponent;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Segment,\n  Header,\n  Icon,\n  Input,\n  Button,\n} from 'semantic-ui-react';\n\nimport { tolStandard, tolType, tolClass, calcTol } from './utils/standards';\n\nimport SelectMe from './components/Select/select.component';\nimport ResultComponent from './components/Result/result.component';\n\nconst App = () => {\n  const [tolStandardState, setTolStandardState] = useState({\n    name: 'tolStandard',\n    value: '',\n    options: tolStandard,\n    label: 'tolerance standard',\n    show: true,\n  });\n  const [tolTypeState, setTolTypeState] = useState({\n    name: 'tolType',\n    value: '',\n    options: tolType,\n    label: 'tolerance type',\n    show: false,\n  });\n  const [tolClassState, setTolClassState] = useState({\n    name: 'tolClass',\n    value: '',\n    options: tolClass,\n    label: 'tolerance class',\n    show: false,\n  });\n  const [checkValue, setCheckValue] = useState(null);\n  const [result, setResult] = useState('');\n\n  useEffect(() => {\n    // Show tolerance type if tolerance standard is chosen\n    if (tolStandardState.value && !tolTypeState.show) {\n      setTolTypeState({\n        ...tolTypeState,\n        show: true,\n      });\n    }\n    // Hide tolerance type if tolerance standard is not chosen\n    // Reset value and result\n    if (!tolStandardState.value && tolTypeState.show) {\n      setTolTypeState({\n        ...tolTypeState,\n        value: '',\n        show: false,\n      });\n      setCheckValue(null);\n      setResult('');\n    }\n\n    // Show tolerance class if tolerance type is chosen\n    if (tolTypeState.value && !tolClassState.show) {\n      setTolClassState({\n        ...tolClassState,\n        show: true,\n      });\n    }\n    // Hide tolerance class if tolerance type is not chosen\n    // Reset value and result\n    if (!tolTypeState.value && tolClassState.show) {\n      setTolClassState({\n        ...tolClassState,\n        value: '',\n        show: false,\n      });\n      setCheckValue(null);\n      setResult('');\n    }\n  }, [tolStandardState, tolTypeState, tolClassState, checkValue]);\n\n  // Update tolerance standard state\n  const updateTolStandard = (event, data) => {\n    const { value } = data;\n\n    setTolStandardState({\n      ...tolStandardState,\n      value,\n    });\n    setCheckValue(null);\n    setResult('');\n  };\n\n  // Update tolerance type state\n  const updateTolType = (event, data) => {\n    const { value } = data;\n\n    setTolTypeState({\n      ...tolTypeState,\n      value,\n    });\n    setCheckValue(null);\n    setResult('');\n  };\n\n  // Update tolerance class state\n  const updateTolClass = (event, data) => {\n    const { value } = data;\n\n    setTolClassState({\n      ...tolClassState,\n      value,\n    });\n    setCheckValue(null);\n    setResult('');\n  };\n\n  // Handle value change of input\n  const handleValueChange = (event) => {\n    const { value } = event.target;\n\n    setCheckValue(value);\n    setResult('');\n  };\n\n  // Calculate result\n  const handleResult = () => {\n    const result = calcTol(\n      checkValue,\n      tolStandardState.value,\n      tolTypeState.value,\n      tolClassState.value,\n    );\n    setResult(result);\n  };\n\n  return (\n    <Container text fluid>\n      <Segment\n        raised\n        padded=\"very\"\n        textAlign=\"center\"\n        style={{ margin: '2em' }}\n      >\n        <Header as=\"h1\" icon>\n          <Icon name=\"sitemap\" />\n          Tolerance Standards\n          <Header.Subheader>\n            Please select a tolerance standard to start.\n          </Header.Subheader>\n        </Header>\n        <Container fluid>\n          <SelectMe\n            name={tolStandardState.name}\n            label={tolStandardState.label}\n            standard={tolStandardState.options}\n            handleChanges={updateTolStandard}\n            show={tolStandardState.show}\n            value={tolStandardState.value}\n          />\n          <SelectMe\n            name={tolTypeState.name}\n            label={tolTypeState.label}\n            standard={tolTypeState.options}\n            handleChanges={updateTolType}\n            show={tolTypeState.show}\n            value={tolTypeState.value}\n          />\n          <SelectMe\n            name={tolClassState.name}\n            label={tolClassState.label}\n            standard={tolClassState.options}\n            handleChanges={updateTolClass}\n            show={tolClassState.show}\n            value={tolClassState.value}\n          />\n          <Input\n            fluid\n            type=\"number\"\n            name=\"checkValue\"\n            disabled={tolClassState.value === '' || !tolClassState.show}\n            style={{ marginBottom: '1em' }}\n            value={checkValue || ''}\n            onChange={handleValueChange}\n          />\n        </Container>\n        {result ? (\n          <ResultComponent\n            result={result}\n            checkValue={checkValue}\n            value={tolTypeState.value}\n          />\n        ) : null}\n        <Button\n          style={{ marginBottom: '1em' }}\n          disabled={tolClassState.value === '' || !tolClassState.show}\n          onClick={handleResult}\n        >\n          Calculate\n        </Button>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as ServiceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nServiceWorker.register();\n"],"sourceRoot":""}